@startuml
'https://plantuml.com/class-diagram

package Core{
    class Entity{
    }
}

package UnoApp{
    enum EColor{
        Blue
        Yellow
        Red
        Green,
        None
    }

    abstract class Card{
        EColor color;
    }

    class NumberCard{
        int number;
    }

    class MustBuyCard{
        int amountToBuy;
    }

    class ReverseCard{
    }

    class JumpCard{
    }
    
    class SwitchHandCard{
    }

    Entity <|.. Card
    EColor <- Card
    Card <|... NumberCard
    Card <|... MustBuyCard
    Card <|... ReverseCard
    Card <|... JumpCard
    Card <|... SwitchHandCard

    interface ICustomRoundCard{
        EntityPtr<Round> GenerateCustomRound(int roundIndex)
    }

    interface IPostRoundAction{    
        void Execute(IMatchContext* CurrentMatch);
    }
    
    interface IMatchContext{}

    MustBuyCard ..|> ICustomRoundCard
    JumpCard ..|> ICustomRoundCard
    ReverseCard ..|> IPostRoundAction
    SwitchHandCard ..|> IPostRoundAction

    ICustomRoundCard --> Round
    IPostRoundAction --> IMatchContext
    SwitchHandCard --> Player

    note bottom of IPostRoundAction : This is supposed to be called before the turn ends
    note bottom of ICustomRoundCard : This creates a custom round for the turn
}
@enduml