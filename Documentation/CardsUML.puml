@startuml
'https://plantuml.com/class-diagram

package Core{
    class Entity{
    }
}

package UnoApp{
    enum EColor{
        Blue
        Yellow
        Red
        Green,
        None
    }

    abstract class Card{
        -EColor color;
        -static std::string GetDisplayTypename(const Card& card);
        -static void DrawCardsFromTo(const std::vector<EntityPtr<Card>>& cards, bool drawOption, int from, int to);
        -static void AddToLineIndex(std::vector<std::string>& lines, const std::string& text, int i);
        +EColor GetColor() const;    
        +virtual std::string GetCardTypeName() const;
        +virtual bool CanTossCardOnMe(const EntityPtr<Card>& other) const;
        +static std::vector<std::string> GetDisplayCard(const Card& card);
        +static void DrawCards(const std::vector<EntityPtr<Card>>& cards, bool drawOption);
        +void Draw() const;
    }

    class NumberCard{
        -int Number;
        +int GetNumber() const;
    }

    class MustBuyCard{
        -int AmountToBuy;
        -int Cumulated;
        -bool IsInRound;
        +int GetAmountToBuy() const;
        +void Cumulate(int amount);
        +void ClearRound();
    }

    class ReverseCard{
    }

    class JumpCard{
    }
    
    class SwitchHandCard{
    }

    Entity <|.. Card
    EColor <- Card
    Card <|... NumberCard
    Card <|... MustBuyCard
    Card <|... ReverseCard
    Card <|... JumpCard
    Card <|... SwitchHandCard

    interface ICustomRoundCard{
        EntityPtr<Round> GenerateCustomRound(int roundIndex)
    }

    interface IPostRoundAction{    
        void Execute(IMatchContext* CurrentMatch);
    }
    
    interface IMatchContext{}

    MustBuyCard ..|> ICustomRoundCard
    JumpCard ..|> ICustomRoundCard
    ReverseCard ..|> IPostRoundAction
    SwitchHandCard ..|> IPostRoundAction

    ICustomRoundCard --> Round
    IPostRoundAction --> IMatchContext
    SwitchHandCard --> Player

    note bottom of IPostRoundAction : This is supposed to be called before the turn ends
    note bottom of ICustomRoundCard : This creates a custom round for the turn
}
@enduml